class CaCertificates(PackageRecipe):
    name = 'ca-certificates'
    version = '1.78_git_f098063'

    buildRequires = [ 'rcs:runtime',
                      'perl:runtime',
                      'icedtea-jdk:runtime',
                      'openssl:runtime']
    # avoids buildLoops when mooking
    # both openssl and icedtea have it as a runtime dep
    clearBuildRequires('ca-certificates:config')

    def setup(r):
        r.macros.tag = r.version[-7:]
        #r.addGitSnapshot('git://pkgs.fedoraproject.org/ca-certificates.git', tag='%(tag)s')
        for s in ['blacklist.txt', 'certdata.txt',
                  'generate-cacerts.pl', 'certdata2pem.py']:
            r.addSource(s)
        r.MakeDirs(('certs', 'java'))
        r.Copy('blacklist.txt', 'certs/')
        r.Copy('certdata.txt', 'certs/')
        r.Run('python ../certdata2pem.py', dir='certs')
        r.Create('ca-bundle.crt', contents = """
# This is a bundle of X.509 certificates of public Certificate
# Authorities.  It was generated from the Mozilla root CA list.
#
# Source: mozilla/security/nss/lib/ckfw/builtins/certdata.txt
#
# Generated from:
""")
        r.Run("ident -q certdata.txt | sed '1d;s/^/#/'>>ca-bundle.crt")
        r.Run("echo '#' >> ca-bundle.crt")

        r.Create('ca-bundle.trust.crt', contents = """
# This is a bundle of X.509 certificates of public Certificate
# Authorities.  It was generated from the Mozilla root CA list.
# These certificates are in the OpenSSL "TRUSTED CERTIFICATE"
# format and have trust bits set accordingly.
#
# Source: mozilla/security/nss/lib/ckfw/builtins/certdata.txt
#
# Generated from:
""")
        r.Run("ident -q certdata.txt | sed '1d;s/^/#/'>>ca-bundle.trust.crt")
        r.Run("echo '#' >> ca-bundle.trust.crt")

        r.Run("""
for f in certs/*.crt; do
   tbits=`sed -n '/^# openssl-trust/{s/^.*=//;p;}' $f`
   case $tbits in
   *serverAuth*) openssl x509 -text -in "$f" >> ca-bundle.crt ;;
   esac
   if [ -n "$tbits" ]; then
      targs=""
      for t in $tbits; do
         targs="${targs} -addtrust $t"
      done
      openssl x509 -text -in "$f" -trustout $targs >> ca-bundle.trust.crt
   fi
done
""")
        # bellow we assume a proper java's keytool is in PATH
        r.Run('perl ../generate-cacerts.pl keytool ../ca-bundle.crt', dir='java')
        r.Run('touch -r ../certdata.txt cacerts', dir='java')

        r.Install('ca-bundle.{,trust.}crt', '%(sysconfdir)s/pki/tls/certs/', mode=0644)
        r.Install('java/cacerts', '%(sysconfdir)s/pki/java/', mode=0644)

        r.Symlink('%(sysconfdir)s/pki/tls/certs/ca-bundle.crt', '%(sysconfdir)s/pki/tls/cert.pem')
        # XXX line bellow commented for now to avoid migration issues from the 
        # rpl's geriatric openssl (plain dir turned symlink) 
        #r.Symlink('%(sysconfdir)s/pki/tls/certs', '%(sysconfdir)s/ssl/')
        #r.DanglingSymlinks(exceptions='%(sysconfdir)s/.*')
        # this is way %&&&&%$%#$@$# and is intended as a stop gap measure ...
        for f in [ 'ca-bundle.crt',
                   'ca-bundle.trust.crt']:
            r.Symlink('%(sysconfdir)s/pki/tls/certs/' + f, '%(sysconfdir)s/ssl/certs/' + f)

        r.Config(exceptions = '%(sysconfdir)s/pki/.*')
