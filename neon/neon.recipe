#
# Copyright (c) 2004-2008 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

class Neon(AutoPackageRecipe):
    name = 'neon'
    version = '0.29.6'
    packageSummary = 'neon is an HTTP and WebDAV client library'
    packageDescription = """"neon is an HTTP and WebDAV client library, with a C interface. 

Features:

 * High-level wrappers for common HTTP and WebDAV operations (GET, MOVE, DELETE, etc)
 * Low-level interface to the HTTP request/response engine, allowing the use of arbitrary HTTP methods, headers, etc.
 * Authentication support including Basic and Digest support, along with GSSAPI-based Negotiate on Unix, and SSPI-based Negotiate/NTLM on Win32
 * SSL/TLS support using OpenSSL or GnuTLS; exposing an abstraction layer for verifying server certificates, handling client certificates, and examining certificate properties. Smartcard-based client certificates are also supported via a PKCS#11 wrapper interface.
 * Abstract interface to parsing XML using libxml2 or expat, and wrappers for simplifying handling XML HTTP response bodies
 * WebDAV metadata support; wrappers for PROPFIND and PROPPATCH to simplify property manipulation.
""" 

    buildRequires = [ 'libxml2:devel', 'zlib:devel', 'pkgconfig:devel',
                      'expat:devel', 'gnutls:devel', 'libproxy:devel',
                      'nss:runtime', 'krb5:devel', 'openssl:runtime' ]

    def unpack(r):
        r.addArchive('http://www.webdav.org/%(name)s/')
        r.addPatch('neon-0.27.0-multilib.patch')

    def configure(r):
        r.Environment('CC', '%(cc)s -pthread')
        r.Configure(' --with-expat --enable-shared --disable-static '
                    ' --enable-warnings '
                    ' --with-ca-bundle=%(sysconfdir)s/pki/tls/certs/ca-bundle.crt '
                    ' --with-ssl=gnutls --enable-threadsafe-ssl=posix '
                    ' --with-libproxy')

    def policy(r):
        r.Doc('src/COPYING.LIB', 'THANKS')
        r.RemoveNonPackageFiles(exceptions='%(libdir)s/libneon.la')
