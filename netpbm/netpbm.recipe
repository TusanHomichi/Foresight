#
# Copyright (c) 2004-2007 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#
loadSuperClass('rpmpackage')
class Netpbm(RPMPackageRecipe,CPackageRecipe):
    name = 'netpbm'
    version = '10.47.05'
    rpmRelease = '1.fc12'
    tarballName = '%(name)s-%(version)s.tar.xz'
    rpmPatches = [ 'netpbm-time.patch', 
                   'netpbm-message.patch',
                   'netpbm-security-scripts.patch',
                   'netpbm-security-code.patch',
                   'netpbm-nodoc.patch',
                   'netpbm-gcc4.patch',
                   'netpbm-bmptopnm.patch',
                   'netpbm-CAN-2005-2471.patch',
                   'netpbm-xwdfix.patch',
                   'netpbm-ppmtompeg.patch',
                   'netpbm-multilib.patch',
                   'netpbm-pamscale.patch',
                   'netpbm-glibc.patch',
                   'netpbm-pnmtofiasco-stdin.patch',
                   'netpbm-svgtopam.patch',
                   'netpbm-ppmpat-segfault.patch',
                   'netpbm-pnmsmooth-segfault.patch',
                   'netpbm-pamtosvg.patch']

    buildRequires = [ 'libjpeg:devel', 'libpng:devel',
                      'libtiff:devel', 'flex:runtime',
                      'zlib:devel', 'libxml2:devel',
                      'perl:lib', 'perl:runtime',
                      'xz:runtime', 'libX11:devel',
                      'perl:devel', 'bison:runtime']

    def setup(r):
        r.disableParallelMake()
        RPMPackageRecipe.unpack(r)
        r.Replace('STRIPFLAG = -s', 'STRIPFLAG =',  'config.mk.in')
        r.ManualConfigure(""" << EOF



















EOF""")
        r.Environment('TOP', '%(builddir)s')
        
        r.Make("""
CC="%(cc)s"
LDFLAGS="-L$TOP/pbm -L$TOP/pgm -L$TOP/pnm -L$TOP/ppm" 
CFLAGS="%(cflags)s -fPIC -flax-vector-conversions" 
LADD="-lm" 
JPEGINC_DIR=%(includedir)s 
PNGINC_DIR=%(includedir)s 
TIFFINC_DIR=%(includedir)s 
JPEGLIB_DIR=%(libdir)s 
PNGLIB_DIR=%(libdir)s 
TIFFLIB_DIR=%(libdir)s 
LINUXSVGALIB="NONE" 
X11LIB=%(libdir)s/libX11.so 
XML2LIBS="NONE" 
JASPERLIB="" 
JASPERDEPLIBS="-ljasper"



""")
        # prepare man files
        r.Run("""
cd userguide
for i in *.html ; do
  ../buildtools/makeman ${i}
done
for i in 1 3 5 ; do
  mkdir -p man/man${i}
  mv *.${i} man/man${i}
done
""")

        # the install script will not install to an already-existing directory,
        # so we patched it to install to a nonsensical directory
        r.Make('package pkgdir=%(builddir)s/foobarbaz/ LINUXSVGALIB="NONE" XML2LIBS="NONE"')
        r.Move('foobarbaz/*', '%(prefix)s/')
        if Arch.x86_64:
            r.MakeDirs('%(libdir)s/')
            r.Move('/usr/lib/lib*', '%(libdir)s')

        r.Copy('lib/libnetpbm.a', '%(libdir)s/libnetpbm.a')
        r.Symlink('libnetpbm.so.10', '%(libdir)s/libnetpbm.so')

        r.Move('userguide/man/*', '%(mandir)s/')

        # Don't ship man pages for non-existent binaries and bogus ones
        for i in [ 'hpcdtoppm',
                   'pcdovtoppm',
                   'pnmtojbig',
                   'ppmsvgalib',
                   'vidtoppm',
                   'picttoppm',
                   'jbigtopnm',
                   'directory',
                   'error',
                   'extendedopacity',
                   'pam',
                   'pbm',
                   'pgm',
                   'pnm',
                   'ppm',
                   'index',
                   'libnetpbm_dir',
                   'liberror',
                   'pambackground',
                   'pamfixtrunc',
                   'pamtogif',
                   'pamtooctaveimg',
                   'pamundice',
                   'ppmtotga']:
            r.Remove('%(mandir)s/man1/${i}.1')
        r.Remove('%(mandir)s/man5/extendedopacity.5')

        r.Move('/usr/misc/*.map', '%(datadir)s/netpbm/')
        r.Move('/usr/misc/rgb.txt', '%(datadir)s/netpbm/')
        r.Remove('/usr/README')
        r.Remove('/usr/VERSION')
        r.Remove('/usr/link', recursive = True)
        r.Remove('/usr/misc', recursive = True)
        r.Remove('/usr/man', recursive = True)
        r.Remove('/usr/pkginfo', recursive = True)
        r.Remove('/usr/config_template')

        # Don't ship the static library
        r.Remove('%(libdir)s/lib*.a')
