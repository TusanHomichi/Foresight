#!/bin/bash
# Modified by Ken VanDine (ken AT vandine DOT org)
# Originally derived from knoppix

PATH="/bin:/usr/bin:/sbin:/usr/sbin"; export PATH
umask 022

# [ "`id -u`" != "0" ] && echo "WARNING: $0 has to run as root to work properly." 1>&2

# ANSI COLORS
CRE="
[K"
NORMAL="[0;39m"
# RED: Failure or error message
RED="[1;31m"
# GREEN: Success message
GREEN="[1;32m"
# YELLOW: Descriptions
YELLOW="[1;33m"
# BLUE: System messages
BLUE="[1;34m"
# MAGENTA: Found devices or drivers
MAGENTA="[1;35m"
# CYAN: Questions
CYAN="[1;36m"
# BOLD WHITE: Hint
WHITE="[1;37m"

TMPFILE="/tmp/mkxf86config-$$"
MONITORTMP="$TMPFILE-monitor"

rm -f "$TMPFILE" "$MONITORTMP"


# Read in what hwsetup has found
[ -f /etc/sysconfig/autoconfig ] && . /etc/sysconfig/autoconfig

CMDLINE="$(cat /proc/cmdline)"

getbootparam(){
case "$CMDLINE" in *\ $1=*) ;; *) return 1; ;; esac
result="${CMDLINE##*$1=}"
result="${result%%[     ]*}"
echo "$result"
return 0
}

checkbootparam(){
case "$CMDLINE" in *\ $1*) return 0;; esac
return 1
}

# Read in what hwsetup has found for X
[ -f /etc/sysconfig/xserver ] && . /etc/sysconfig/xserver

# Wheel
WHEEL=""
if checkbootparam "wheel"; then
WHEEL='s|"PS/2"|"IMPS/2"\
Option          "ZAxisMapping"          "4 5"|g;'
elif checkbootparam "nowheel"; then
# Don't change the default, which is plain PS/2
WHEEL=""
else
WHEEL='s|"PS/2"|"IMPS/2"\
Option          "ZAxisMapping"          "4 5"|g;'
fi

# Read in changes
[ -f /etc/sysconfig/autoconfig ] && . /etc/sysconfig/autoconfig

# Read default keyboard from config file.
# There seems to be no reliable autoprobe possible.
[ -f /etc/sysconfig/keyboard ] && . /etc/sysconfig/keyboard

# Create mouse link and insert a mouse default type into XF86Config
# if not already done by hwsetup
[ -f /etc/sysconfig/mouse ] && . /etc/sysconfig/mouse
[ -e /dev/mouse ] || ln -sf /dev/ttyS0 /dev/mouse
# PROTO="${XMOUSETYPE:-Auto}"
PROTO="${XMOUSETYPE:-Microsoft}"
NOEMU=""
[ "${XEMU3}" = "no" ] && NOEMU='s|^.*Emulate3|# No 2 -> 3 Button emulation|g'
DEADKEYS=""
[ "$XKEYBOARD" = "de" ] || DEADKEYS='s|^.*nodeadkeys.*$||g;'
if [ -n "XMODULE" ]; then
# Check for Framebuffer X-Modules and initialize framebuffer module
case "$XMODULE" in
pvr2fb) modprobe "$XMODULE" >/dev/null 2>&1 ; XMODULE="fbdev"; ;;
esac
fi

NODDC=""
NOMODELINES=""

MONITOR=""
COMPLETE=""
RC=""


MONITOR="$(ddcxinfo -monitor-noml)"
#MONITOR="$(ddcxinfo -monitor)"
RC="$?"
COMPLETE="$(awk '/EndSection/{print}' <<EOF
$MONITOR
EOF)"



# "Failsafe" caso o monitor não seja detectado.
if [ "$RC" != "0" -o -z "$MONITOR" -o -z "$COMPLETE" ]; then
MONITOR='
Section "Monitor"
 Identifier   "Monitor0"
 ModelName    "Old Monitor (no DDC)"
 HorizSync    28.0 - 78.0 # Warning: This may fry very old Monitors
# HorizSync    28.0 - 96.0 # Warning: This may fry old Monitors
# VertRefresh  50.0 - 76.0 # Very conservative. May flicker.
 VertRefresh  49.0 - 60.0 # Extreme conservative. Will flicker. TFT default.
EndSection
'
fi


# Extract values for display
MODEL="$(awk '/^[  ]*ModelName/{print;exit}'<<EOF
$MONITOR
EOF
)"

MODEL="${MODEL#*\"}"
MODEL="${MODEL%\"*}"


HREFRESH="$(awk '/^[  ]*HorizSync/{print $2 $3 $4; exit}'<<EOF
$MONITOR
EOF
)"

VREFRESH="$(awk '/^[  ]*VertRefresh/{print $2 $3 $4; exit}'<<EOF
$MONITOR
EOF
)"

# Use commandline vertical refresh rate if specified
if [ -n "$XVREFRESH" ]; then
MONITOR="$(sed 's|VertRefresh[  ].*$|VertRefresh 49.0 - '"$XVREFRESH"'|g;' <<EOF
$MONITOR
EOF
)"
fi

# Use commandline horizontal refresh rate if specified
if [ -n "$XHREFRESH" ]; then
MONITOR="$(sed 's|HorizSync[  ].*$|HorizSync 28.0 - '"$XHREFRESH"'|g;' <<EOF
$MONITOR
EOF
)"
fi

DEPTH=""
# Use commandline colordepth if specified
if [ -n "$XDEPTH" ]; then
DEPTH='s|DefaultColorDepth[ ].*$|DefaultColorDepth '"$XDEPTH"'|g;'
fi

case "$(cat /proc/modules)" in *usbmouse*|*mousedev*)
USBMOUSE="" ;;
*)
USBMOUSE='s|^.*InputDevice.*"USB Mouse".*$|# USB Mouse not detected|g;';;
esac

# We need to check this because serial mice have long timeouts
SERIALMOUSE="$(ls -l1 /dev/mouse* 2>/dev/null | awk '/ttyS/{print $NF ; exit 0}')"
if [ -n "$SERIALMOUSE" ]; then
SERIALMOUSE="s|/dev/ttyS0|$SERIALMOUSE|g;"
else
SERIALMOUSE='s|^.*InputDevice.*"Serial Mouse".*$|# Serial Mouse not detected|g;'
fi

# PS/2 bug: Some keyboards are incorrectly used as mice in XFree. :-(
PSMOUSE="$(ls -l1 /dev/mouse* 2>/dev/null)"
if [ -n "$PSMOUSE" ]; then
PSMOUSE=""
else
PSMOUSE='s|^.*InputDevice.*"PS/2 Mouse".*$|# PS/2 Mouse not detected|g;'
fi

# TouchPad detection

TOUCHPAD='s|^.*InputDevice.*"ALPS TouchPad".*$|# ALPS TouchPad not detected|g;s|^.*InputDevice.*"Synaptics TouchPad".*$|# Synaptics TouchPad not detected|g;s|^.*Load.*"synaptics".*$|# TouchPad not detected|;'
#if [ "$MOUSE_FULLNAME" = "AlpsPS/2 ALPS TouchPad" ]; then
if grep -q "AlpsPS/2 ALPS TouchPad" /proc/bus/input/devices; then
checkbootparam "notouchpad" || TOUCHPAD='s|^.*InputDevice.*"Synaptics TouchPad".*$|# Synaptics TouchPad not detected|g;'
fi
#if [ "$MOUSE_FULLNAME" = "SynPS/2 Synaptics TouchPad" ]; then
if grep -q "SynPS/2 Synaptics TouchPad" /proc/bus/input/devices; then
checkbootparam "notouchpad" || TOUCHPAD='s|^.*InputDevice.*"ALPS TouchPad".*$|# ALPS TouchPad not detected|g;'
fi

# Write Monitor data now
rm -f "$MONITORTMP"
echo "$MONITOR" >"$MONITORTMP"

# Detect Intel
vidintel=`lspci | grep "Intel Corp" |grep "Graphics"`
vidintel2=`lspci | grep "915GM/GMS"`
if [ -n "$vidintel" -o -n "$vidintel2" ]; then
    cp /etc/X11/xorg.conf.i810 /etc/X11/xorg.conf.in
fi

# Detect ATI
vidati=`lspci | grep "Radeon"`
vidati2=`lspci | grep "VGA compatible controller: ATI Technologies"`
if [ -n "$vidati" -o -n "$vidati2" ]; then
    cp /etc/X11/xorg.conf.radeon /etc/X11/xorg.conf.in
fi

# Detect nvidia
nvfree=`lspci | grep VGA | grep nVidia`
modprobe nvidia 2> /dev/null
nvbin=`lsmod |grep nvidia`
if [ -n "$nvfree" ]; then
    if [ -n "$nvbin" ];then
        cp /etc/X11/xorg.conf.nvidia /etc/X11/xorg.conf.in
    else
        cp /etc/X11/xorg.conf.nv /etc/X11/xorg.conf.in
    fi
fi

if [ ! -f /etc/X11/xorg.conf.in ];then
    cp /etc/X11/xorg.conf.vesa /etc/X11/xorg.conf.in
fi


# /etc/X11/xorg.conf.in is the "default" config.
if [ ! -f /etc/X11/xorg.conf ]; then
# Remove it, just in case it's a link to CD
rm -f /etc/X11/xorg.conf 2>/dev/null
sed -e 's|@@PROTOCOL@@|'"$PROTO"'|g;'"$NOEMU" \
    -e '/@@MONITOR@@/r '"$MONITORTMP" \
    -e 's|@@MONITOR@@||g' \
    /etc/X11/xorg.conf.in > /etc/X11/xorg.conf.tmp
fi

# VMWare special handling
VMWARE=""
if [ "$XMODULE" = "vmware" ]; then
VMWARE='s|^.*BusID.*PCI.*$|BusID "PCI:0:15:0"|g;'
DEPTH='s|DefaultColorDepth |# DefaultColorDepth |g;'
fi

# These drivers need the sw_cursor option
SWCURSOR=""
case "$XMODULE" in ati|radeon|nv|trident) SWCURSOR='s|^.*#Option.*"sw_cursor".*$|Option "sw_cursor"|g;';; esac

# We must use NoPM, because some machines freeze if Power management is being activated.

NOPM=""
DPMS=""
checkbootparam noapm && NOPM='Option "NoPM" "true"' || DPMS='Option "DPMS" "true"'

sed -e 's|@@PROTOCOL@@|'"$PROTO"'|g;'"$NOEMU" \
    -e '/@@MONITOR@@/r '"$MONITORTMP" \
    -e 's|@@MONITOR@@||g' \
    -e 's|@@NOPM@@|'"$NOPM"'|g' \
    -e 's|@@XMODULE@@|'"$XMODULE"'|g;'"$VMWARE""$SERIALMOUSE""$USBMOUSE""$PSMOUSE""$SWCURSOR""$WHEEL""$TOUCHPAD" \
    -e 's|"XkbLayout" *"[^"]*"|"XkbLayout" "'"$XKEYBOARD"'"|g;'"$DEADKEYS" \
    /etc/X11/xorg.conf.in >/etc/X11/xorg.conf

if [ -n "$DPMS" ]; then
sed -e 's|Identifier[  ]*"Monitor0"|Identifier "Monitor0"\
 '"$DPMS"'|g' /etc/X11/xorg.conf >/etc/X11/xorg.conf.new
mv -f /etc/X11/xorg.conf.new /etc/X11/xorg.conf
fi

rm -f "$TMPFILE" "$MONITORTMP" 2>/dev/null

# Print info about selected X-Server
[ -n "$XDESC" ] || XDESC="(yet) unknown card"
echo -n " ${GREEN}Video:"
[ -n "$XDESC" ] && echo -n " ${YELLOW}$XDESC${GREEN},"
echo -n " using ${YELLOW}Xorg"
[ -n "$XMODULE" ] && echo -n "(${MAGENTA}$XMODULE${YELLOW})"
echo " Server${NORMAL}"
echo -n " ${GREEN}Monitor: ${YELLOW}${MODEL:-Generic Monitor}${NORMAL}"
[ -n "$HREFRESH" -a -n "$VREFRESH" ] && echo "${GREEN}, ${GREEN}H:${YELLOW}${HREFRESH}kHz${GREEN}, V:${YELLOW}${VREFRESH}Hz${NORMAL}" || echo ""
[ -n "$XVREFRESH" ] && echo " ${GREEN}Trying specified vrefresh rate of ${YELLOW}${XVREFRESH}Hz.${NORMAL}"

# Correção para mouses Synaptic 
mousesynaptics=`cat /proc/bus/input/devices | grep Synaptics`
if [ -n "$mousesynaptics" ]; then
  # Verifica se a entrada foi incluída no /etc/X11/xorg.conf e inclui a entrada caso necessário
  verificador=`cat /etc/X11/xorg.conf 2>/dev/null | sed -e '/^\#/D' | sed -e '/^$/D' | grep 'InputDevice    "Synaptics TouchPad" "CorePointer"'`
    if [ -z "$verificador" ]; then
      sed -e 's/\#\ Synaptics\ TouchPad\ not\ detected/InputDevice\ \ \ \ \"Synaptics\ TouchPad\"\ \"CorePointer"/g' /etc/X11/xorg.conf > /etc/X11/xorg.conf-mo
      rm -f /etc/X11/xorg.conf; mv /etc/X11/xorg.conf-mo /etc/X11/xorg.conf 
    fi
   # O mkxf86config do Kano parece não detectar o mouse corretamente em algumas máquinas, vamos entao
   # forçar a ativação de pelo menos um tipo de mouse. O protocolo de autodetecção do X vai cuidar do resto
  sed -e 's/\#\ USB\ Mouse\ not\ detected/InputDevice\ \"USB\ Mouse\"\ \"CorePointer\"/g' /etc/X11/xorg.conf > /etc/X11/xorg.conf-mo
  rm -f /etc/X11/xorg.conf; mv /etc/X11/xorg.conf-mo /etc/X11/xorg.conf 
fi


# O driver Trident não oferece suporte à maior parte das trident antigas, que sao as mais usadas. O vesa funciona perfeitamente:
vidtrid=`cat /etc/X11/xorg.conf | sed -r 's/ +/ /g' | grep 'Driver "trident"'`
if [ -n "$vidtrid" ]; then
  sed -i -e 's/trident/vesa/g' /etc/X11/xorg.conf
fi


# Desativa o GLX em drivers que não suportam 3D
#noglx1=`cat /etc/X11/xorg.conf | sed -r 's/ +/ /g' | grep 'Driver "cirrus"'`
#noglx2=`cat /etc/X11/xorg.conf | sed -r 's/ +/ /g' | grep 'Driver "vesa"'`
#noglx3=`cat /etc/X11/xorg.conf | sed -r 's/ +/ /g' | grep 'Driver "sis"'`
#noglx4=`cat /etc/X11/xorg.conf | sed -r 's/ +/ /g' | grep 'Driver "via"'`
#noglx5=`cat /etc/X11/xorg.conf | sed -r 's/ +/ /g' | grep 'Driver "fbdev"'`
#noglx6=`cat /etc/X11/xorg.conf | sed -r 's/ +/ /g' | grep 'Driver "vmware"'`
#if [ -n "$noglx1" -o -n "$noglx2" -o -n "$noglx3" -o -n "$noglx4" -o -n "$noglx5" -o -n "$noglx6" ];
#then
#  sed -e 's/\ Load\ \ \"GLcore\"/\#\ Load\ \ \"GLcore\"/g' /etc/X11/xorg.conf > /etc/X11/xorg.conf.1
#  sed -e 's/\ Load\ \ \"dbe\"/\#\ Load\ \ \"dbe\"/g' /etc/X11/xorg.conf.1 > /etc/X11/xorg.conf.2
#  sed -e 's/\ Load\ \ \"dri\"/\#\ Load\ \ \"dri\"/g' /etc/X11/xorg.conf.2 > /etc/X11/xorg.conf.3
#  sed -e 's/\ Load\ \ \"glx\"/\#\ Load\ \ \"glx\"/g' /etc/X11/xorg.conf.3 > /etc/X11/xorg.conf.4
#  rm -f /etc/X11/xorg.conf.{1,2,3}
#  rm -f /etc/X11/xorg.conf
#  mv /etc/X11/xorg.conf.4 /etc/X11/xorg.conf
#fi

# Regras de teclado do Xorg. Troca o driver "radeon" por "ati"
cp -a /etc/X11/xorg.conf /etc/X11/xorg.conf.temp
sed -e 's/\ Option\ \"XkbRules\"\ \"xfree86\"/\ Option\ \"XkbRules\"\ \"xorg\"/g' /etc/X11/xorg.conf.temp > /etc/X11/xorg.conf.temp.1
sed -e 's/\ Driver\ \"keyboard\"/\ Driver\ \"kbd\"/g' /etc/X11/xorg.conf.temp.1 > /etc/X11/xorg.conf.temp.2
sed -e 's/\ Option\ \"XkbLayout\"\ \"\"/\ Option\ \"XkbLayout\"\ \"br\"/g' /etc/X11/xorg.conf.temp.2 > /etc/X11/xorg.conf.temp.3
sed -e 's/radeon/radeon/g' /etc/X11/xorg.conf.temp.3 > /etc/X11/xorg.conf
rm -f /etc/X11/xorg.conf.temp*


# Radeon 300M IGP e outras
atiigp=`cat /etc/X11/xorg.conf 2>/dev/null | grep 'Driver      "ati"'`
if [ -n "$atiigp" ]; then
  modprobe agpgart
  modprobe ati-agp
  modprobe drm
  modprobe radeon
fi

# Via S3 UniChrome
vidvia=`lspci | grep "UniChrome"`
if [ -n "$vidvia" ]; then
  modprobe via-agp 
  modprobe via
fi

