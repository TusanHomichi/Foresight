From 36c2d1a4188ae4cb2182bf7b07f06ca6f51688c3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Cl=C3=A9ment=20DAVID?= <c.david86@gmail.com>
Date: Mon, 27 Jun 2011 20:54:24 +0200
Subject: [PATCH 2/7] add H4_ prefix to constants

---
 native/hdflib/hdfsdsImp.c      |    4 ++--
 native/hdflib/hdfstructsutil.c |    8 ++++----
 native/hdflib/hdfvdataImp.c    |    4 ++--
 3 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/native/hdflib/hdfsdsImp.c b/native/hdflib/hdfsdsImp.c
index dd3d7b7..0842bc6 100755
--- a/native/hdflib/hdfsdsImp.c
+++ b/native/hdflib/hdfsdsImp.c
@@ -147,7 +147,7 @@ jintArray argv)  /* OUT: rank, NT, nattr */
     int32 *dims;
     int32 *theArgs;
 
-    cname = (char *)malloc(MAX_NC_NAME+1);
+    cname = (char *)malloc(H4_MAX_NC_NAME+1);
     if (cname == NULL) {
         h4outOfMemory(env, "SDgetinfo");
         return FAIL;
@@ -158,7 +158,7 @@ jintArray argv)  /* OUT: rank, NT, nattr */
 
     retVal = SDgetinfo((int32)sdsid, cname, &(theArgs[0]), dims,
             &(theArgs[1]), &(theArgs[2]));
-    cname[MAX_NC_NAME] = '\0';
+    cname[H4_MAX_NC_NAME] = '\0';
 
     if (retVal == FAIL) {
         ENVPTR->ReleaseIntArrayElements(ENVPAR dimsizes,(jint *)dims,JNI_ABORT);
diff --git a/native/hdflib/hdfstructsutil.c b/native/hdflib/hdfstructsutil.c
index 95fc128..5b07d6c 100755
--- a/native/hdflib/hdfstructsutil.c
+++ b/native/hdflib/hdfstructsutil.c
@@ -409,7 +409,7 @@ jboolean bb;
 
     lens = (jint *)ENVPTR->GetIntArrayElements(ENVPAR (jintArray)larr,&bb);
 
-    for (i = 0; i < MAX_VAR_DIMS; i++) {
+    for (i = 0; i < H4_MAX_VAR_DIMS; i++) {
         cinf->comp.chunk_lengths[i] = (int32)lens[i];
     }
 
@@ -453,7 +453,7 @@ jboolean bb;
 
         lens = (jint *)ENVPTR->GetIntArrayElements(ENVPAR (jintArray)larr,&bb);
 
-        for (i = 0; i < MAX_VAR_DIMS; i++) {
+        for (i = 0; i < H4_MAX_VAR_DIMS; i++) {
             cinf->nbit.chunk_lengths[i] = (int32)lens[i];
         }
 
@@ -500,11 +500,11 @@ jmethodID jmi;
 jintArray rarray;
 jobject compinfo;
 
-    rarray = ENVPTR->NewIntArray(ENVPAR MAX_VAR_DIMS);
+    rarray = ENVPTR->NewIntArray(ENVPAR H4_MAX_VAR_DIMS);
     if (rarray == NULL) {
         return JNI_FALSE;
     }
-    ENVPTR->SetIntArrayRegion(ENVPAR rarray,0,MAX_VAR_DIMS,(jint *)cinf->chunk_lengths);
+    ENVPTR->SetIntArrayRegion(ENVPAR rarray,0,H4_MAX_VAR_DIMS,(jint *)cinf->chunk_lengths);
 
         /* release rarray? */
 
diff --git a/native/hdflib/hdfvdataImp.c b/native/hdflib/hdfvdataImp.c
index f7ee681..4fdbd97 100755
--- a/native/hdflib/hdfvdataImp.c
+++ b/native/hdflib/hdfvdataImp.c
@@ -355,7 +355,7 @@ jobjectArray sargs) /* OUT: String fields, vdata_name */
         return FAIL;
     }
 
-    name = (char *)malloc(MAX_NC_NAME+1);
+    name = (char *)malloc(H4_MAX_NC_NAME+1);
     if (name == NULL) {
         free(flds);
         return FAIL;
@@ -373,7 +373,7 @@ jobjectArray sargs) /* OUT: String fields, vdata_name */
         (int32 *)&(theIargs[1]), flds, (int32 *)&(theIargs[2]), name);
 
     flds[MAX_FIELD_SIZE] = '\0';
-    name[MAX_NC_NAME] = '\0';
+    name[H4_MAX_NC_NAME] = '\0';
 
     if (rval == FAIL) {
         ENVPTR->ReleaseIntArrayElements(ENVPAR iargs,theIargs,JNI_ABORT);
-- 
1.7.7

