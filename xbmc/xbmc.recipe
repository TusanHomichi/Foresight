# vim:set ts=4 sw=4 et:
#
# Copyright (c) 2009-2014 The Foresight Linux Project
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.foresightlinux.org/licenses/mit-license/
#

loadRecipe('python')
class Xbmc(AutoPackageRecipe):
    name = 'xbmc'
    version = '12.3'
 
    buildRequires = [
        'alsa-lib:devel',
        'autoconf:data',
        'autoconf:runtime',
        'automake:runtime',
        'avahi:devel',
        'bison:runtime',
        'bluez:devel',
        'boost:devel',
        'bzip2:devel',
        'ccache:runtime',
        'cmake:runtime',
        'curl:devel',
        'curl:runtime',
        'cvs:runtime',
        'dbus:devel',
        'desktop-file-utils:runtime',
        'doxygen:runtime',
        'enca:devel',
        'expat:devel',
        'faac:devel',
        'faad2:devel',
        'ffmpeg:devel',
        'flac:devel',
        'flex:runtime',
        'fontconfig:devel',
        'freetype:devel',
        'fribidi:devel',
        'gcc-c++:runtime',
        'gettext:runtime',
        'git:runtime',
        'glew:devel',
        'glib:devel',
        'gperf:runtime',
        'hal:devel',
        'icedtea-jdk:runtime',
        'intltool:runtime',
        'jasper:devel',
        'libass:devel',
        'libbluray:devel',
        'libcap:devel',
        'libcdio:devel',
        'libcec:devel',
        'libdvdread:devel',
        'libICE:devel',
        'libjpeg:devel',
        'libmad:devel',
        'libmicrohttpd:devel',
        'libmms:devel',
        'libmodplug:devel',
        'libmpeg2:devel',
        'libnfs:devel',
        'libogg:devel',
        'libplist:devel', 
        'libpng:devel',
        'libsamplerate:devel',
        'libSM:devel',
        'libssh:devel',
        'libstdc++:devel',
        'libtermcap:devel',
        'libtiff:devel',
        'libtool:runtime',
        'libva:devel',
        'libvdpau:devel',
        'libvorbis:devel',
        'libX11:devel',
        'libXau:devel',
        'libXcomposite:devel',
        'libXcursor:devel',
        'libXdamage:devel',
        'libXdmcp:devel',
        'libXext:devel',
        'libXfixes:devel',
        'libXft:devel',
        'libXi:devel',
        'libXinerama:devel',
        'libxkbfile:devel',
        'libxkbfile:devel', 
        'libXmu:devel',
        'libXpm:devel',
        'libXrandr:devel',
        'libXrender:devel',
        'libXres:devel',
        'libXres:devel', 
        'libXScrnSaver:devel',
        'libXt:devel',
        'libXtst:devel',
        'libXv:devel',
        'libXxf86misc:devel',
        'lzo:devel',
        'Mesa:devel',
        'mysql:devel',
        'nasm:runtime',
        'ncurses:devel',
        'openssl:devel',
        'pcre-c++:devel',
        'pcre:devel',
        'PIL:python',
        'pkgconfig:devel',
        'pulseaudio:devel',
        'pygame:python',
        'pygobject:python',
        'pygtk:python',
        'PyQt:python',
        'python:devel',
        'python-simplejson:python',
        'python-sqlite:python',
        'readline:devel',
        'rtmpdump:devel',
        'samba-client:lib',
        'samba:devel',
        'SDL:devel',
        'SDL_image:devel',
        'SDL_mixer:devel',
        'sqlite:devel',
        'subversion:runtime',
        'swig:runtime',
        'taglib:devel',
        'tcl:devel',
        'tinyxml:devel',
        'tk:devel',
        'udev:devel',
        'unzip:runtime',
        'wavpack:devel',
        'which:runtime',
        'yajl:devel',
        'zip:runtime',
        'zlib:devel',
        ]
  
    def unpack(r):
        r.addArchive('http://mirrors.xbmc.org/releases/source/xbmc-%(version)s.tar.gz')
        # r.addGitSnapshot('git://github.com/xbmc/xbmc.git')
        r.macros.ldflags += ' -L%(libdir)s/xorg.mesa.3d/ -L%(libdir)s/mysql/'
        r.macros.python_sitearch = '%(libdir)s/python%(pyver)s/site-packages/'
        r.Environment('JAVA', '%(libdir)s/jvm/java-1.6.0-icedtea/bin/java')

    def configure(r):
        #r.Run("""touch -r xbmc/screensavers/rsxs-0.9/aclocal.m4 \ $(find xbmc/screensavers/rsxs-0.9 \( -name 'configure.*' -o 'Makefile.*' \))""")
        r.Run("""sed -i -e 's|lsb_release -d|echo Foresight Linux|' xbmc/utils/SystemInfo.cpp""")
        r.Configure(configureName='bootstrap')
        # r.Configure('--with-lirc-device=%(localstatedir)s/run/lirc/lircd --enable-external-libraries --enable-goom --enable-external-ffmpeg --enable-external-python --disable-libdts --enable-liba52 --enable-dvdcss --enable-avahi --enable-libbluray --enable-faac --enable-rtmp --enable-mid --enable-vdpau --enable-vaapi --disable-optimizations --disable-debug')
        r.Configure('--prefix=%(prefix)s --exec-prefix=%(prefix)s --enable-debug --enable-optimizations --enable-gl --enable-sdl --enable-vaapi --enable-vdpau --enable-xvba --enable-joystick --enable-xrandr --enable-rsxs --enable-projectm --enable-x11 --enable-pulse --enable-rtmp --enable-samba --enable-nfs --disable-afpclient --enable-ffmpeg-libvorbis --enable-dvdcss --disable-hal --enable-avahi --enable-webserver --enable-optical-drive --enable-libbluray --enable-texturepacker --enable-udev --enable-libusb --enable-libcec --enable-external-libraries --disable-external-ffmpeg')

    def make(r):
        r.Make()
#        r.Make('-C lib/addons/script.module.pil')
#        r.Make('-C lib/addons/script.module.pysqlite')

    def makeinstall(r):
        r.MakeInstall('DESTDIR=%(destdir)s')
        pkgs = {'PIL': 'PIL:python', 'pysqlite2': 'python-sqlite:python'}
        for (addon_dir, sitepkg) in [
                ('%(libdir)s/xbmc/addons/script.module.pil/lib', 'PIL'),
                ('%(libdir)s/xbmc/addons/script.module.pysqlite/lib', 'pysqlite2')]:
            target = Python.sitepkgs + '/' + sitepkg
            symlink = addon_dir + '/' + sitepkg
            r.MakeDirs(addon_dir)
            r.Symlink(target, symlink)
            r.DanglingSymlinks(exceptions=symlink)
            r.Requires(pkgs[sitepkg], symlink)

        #r.MakeDirs('%(destdir)s%(libdir)s/xbmc/addons/script.module.pil/lib')
        #r.MakeDirs('%(destdir)s%(libdir)s/xbmc/addons/script.module.pysqlite/lib')
        #r.Symlink('%s/PIL' % Python.sitepkgs, '%(libdir)s/xbmc/addons/script.module.pil/lib/')
        #r.Symlink('%s/pysqlite2' % Python.sitepkgs, '%(libdir)s/xbmc/addons/script.module.pysqlite/lib/')

    def policy(r):
        r.Requires('libbluray:lib', '%(name)s:runtime')
        r.Requires('rtmpdump:runtime', '%(name)s:runtime')
