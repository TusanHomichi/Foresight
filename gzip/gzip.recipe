#
# Copyright (c) 2004-2007 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

class Gzip(AutoPackageRecipe):
    name = 'gzip'
    version = '1.4'

    if not Use.bootstrap:
        # needs info-file tag description from the install-info package
        buildRequires = [ 'install-info:runtime', 'texinfo:runtime' ]

    def unpack(r):
        r.disableParallelMake()
        r.addArchive('mirror://gnu/gzip/')
        for p in [ 'gzip-1.3.12-openbsd-owl-tmp.patch',
                   'gzip-1.3.5-zforce.patch',
                   'gzip-1.3.9-stderr.patch',
                   'gzip-1.3.10-zgreppipe.patch',
                   'gzip-1.3.13-rsync.patch',
                   'gzip-1.3.9-addsuffix.patch',
                   'gzip-1.3.5-cve-2006-4338.patch',
                   'gzip-1.3.13-cve-2006-4337.patch',
                   'gzip-1.3.5-cve-2006-4337_len.patch',
                   'gzip-1.3.13-noemptysuffix.patch' ]:
            r.addPatch(p)

        r.Environment('DEFS', 'NO_ASM')
        r.macros.cppflags += ' -DHAVE_LSTAT '

        r.macros.bindir = r.macros.essentialbindir

    def make(r):
        r.Make('AR=%(target)s-ar')

    def policy(r):
        # RPL-1178 - bzless isn't needed for appliances
        r.PackageSpec('gzip-extras', '.*z(more|less).*')

        # FIXME uncompress should be part of ncompress package
        #       when it gets created...
        # r.Remove('%(bindir)s/uncompress')
