class Davfs2(AutoPackageRecipe):
    name = 'davfs2'
    version = '1.4.6'

    buildRequires = ['gettext:runtime', 'neon:devel', 'intltool:runtime',
                     'pkgconfig:devel']

    def unpack(r):
        # savanah mirror autoselection with dead mirrors.
        # we pick one that is known to behave...
        # r.addArchive('http://savannah.nongnu.org/download/%(name)s/%(name)s-%(version)s.tar.gz')
        r.addArchive('http://mirrors.zerg.biz/nongnu/davfs2/')

    def policy(r):
        # Fix the symbolic links.
        for name in ['mount.davfs', 'umount.davfs']:
            path = '%%(essentialsbindir)s/%s' % name
            r.Remove(path)
            r.Symlink('../%%(sbindir)s/%s' % name, path)

        r.SetModes('%(sbindir)s/mount.davfs', 04755)

        r.MakeDirs('%(cachedir)s/davfs2', mode=0775)
        r.Ownership('root', 'davfs2', '%(cachedir)s/davfs2')
        r.ExcludeDirectories(exceptions='%(cachedir)s/davfs2')

        r.MakeDirs('%(localstatedir)s/run/davfs2', mode=01775)
        r.Ownership('root', 'davfs2', '%(localstatedir)s/run/davfs2')
        r.ExcludeDirectories(exceptions='%(localstatedir)s/run/davfs2')

        # Remove duplicate files. (Why is it installing these in the first place?)
        r.Remove('%(datadir)s/davfs2 ', recursive = True) # same files in /etc/davfs2

        # explicitly own stuff under /etc
        for d in ['', 'certs', 'certs/private']:
            dd = '%(sysconfdir)s/davfs2/' + d
            r.MakeDirs(dd)
            r.ExcludeDirectories(exceptions=dd)
